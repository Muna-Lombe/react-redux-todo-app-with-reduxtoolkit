{"ast":null,"code":"// import { createStore, applyMiddleware, compose } from \"redux\";\n// import thunk from \"redux-thunk\";\n// import { fetcherMiddleware } from \"./addons/middleware/fetcherMiddleware\";\n// import { loggerMiddleware } from \"./addons/middleware/loggerMiddleware\";\n// import rootReducer from \"./reducer\";\n// // ////////////////////////////////////////////////////////////////////\n// // ///////////////////// WITHOUT REDUX TOOLKIT ///////////////////////////\n// // add a preloaded state from server\n// // or from localStorage\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport filtersReducer from \"./features/filters/filtersSlice\";\nimport todosReducer from \"./features/todos/todosSlice\"; // let preloadedState;\n// const persistedTodosString = localStorage.getItem('todos')\n// if( persistedTodosString) {\n//     preloadedState = {\n//         todos: JSON.parse(persistedTodosString)\n//     }\n// }\n// const composedEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const middlewareEnhancer = applyMiddleware(loggerMiddleware, thunk)\n// const store = createStore(rootReducer, composedEnhancers(middlewareEnhancer))\n// //////////////////////////////////////////////////////////////////////////\n// /////////////////////////////////////////////////////////////////////////\n// ///////////////// WITH REDUX TOOLKIT ////////////////////////////////////\n\nconst store = configureStore({\n  reducer: {\n    todos: todosReducer,\n    filters: filtersReducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["/home/muna/code/Muna-Lombe/tutorials/React/react-redux-todo-app-with-reduxtoolkit/src/store.js"],"names":["configureStore","filtersReducer","todosReducer","store","reducer","todos","filters"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,YAAP,MAAyB,6BAAzB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAGA;AACA;;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AACzBI,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAEH,YADF;AAELI,IAAAA,OAAO,EAAEL;AAFJ;AADgB,CAAD,CAA5B;AAOA,eAAeE,KAAf","sourcesContent":["// import { createStore, applyMiddleware, compose } from \"redux\";\n// import thunk from \"redux-thunk\";\n// import { fetcherMiddleware } from \"./addons/middleware/fetcherMiddleware\";\n// import { loggerMiddleware } from \"./addons/middleware/loggerMiddleware\";\n// import rootReducer from \"./reducer\";\n// // ////////////////////////////////////////////////////////////////////\n// // ///////////////////// WITHOUT REDUX TOOLKIT ///////////////////////////\n// // add a preloaded state from server\n// // or from localStorage\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport filtersReducer from \"./features/filters/filtersSlice\";\nimport todosReducer from \"./features/todos/todosSlice\";\n\n// let preloadedState;\n// const persistedTodosString = localStorage.getItem('todos')\n\n// if( persistedTodosString) {\n//     preloadedState = {\n//         todos: JSON.parse(persistedTodosString)\n//     }\n// }\n\n\n\n// const composedEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const middlewareEnhancer = applyMiddleware(loggerMiddleware, thunk)\n// const store = createStore(rootReducer, composedEnhancers(middlewareEnhancer))\n\n// //////////////////////////////////////////////////////////////////////////\n\n\n// /////////////////////////////////////////////////////////////////////////\n// ///////////////// WITH REDUX TOOLKIT ////////////////////////////////////\n\nconst store = configureStore({\n    reducer: {\n        todos: todosReducer,\n        filters: filtersReducer\n    }\n})\n\nexport default store;"]},"metadata":{},"sourceType":"module"}