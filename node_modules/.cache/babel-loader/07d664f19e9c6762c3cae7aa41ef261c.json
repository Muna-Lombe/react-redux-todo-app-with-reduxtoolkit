{"ast":null,"code":"var _jsxFileName = \"/home/muna/code/Muna-Lombe/tutorials/React/react-redux-todo-app-with-reduxtoolkit/src/features/todos/TodoListItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ReactComponent as TimesSolid } from './times-solid.svg';\nimport { availableColors, capitalize } from '../filters/colors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTodoById } from './todosSlice';\nimport { FILTER__COLOR_FILTER_CHANGED, TODOS__COLOR_SELECTED, TODOS__TODO_DELETED, TODOS__TODO_TOGGLED } from '../../actionTypes';\nimport { deleteTodo, todosColorSelected, todosDeleted, todosToggledCompleted } from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListItem = _ref => {\n  _s();\n\n  let {\n    id,\n    onColorChange,\n    onCompletedChange,\n    onDelete\n  } = _ref;\n  const todo = useSelector(state => selectTodoById(state, id));\n  const {\n    text,\n    completed,\n    color\n  } = todo;\n  const dispatch = useDispatch();\n\n  const handleCompletedChanged = e => {\n    dispatch(todosToggledCompleted(todo.id));\n  };\n\n  const handleColorChanged = e => {\n    const color = e.target.value;\n    dispatch(todosColorSelected(color, todo.id));\n  };\n\n  const handleDelete = () => {\n    const deleteTodoThunk = deleteTodo(todo.id);\n    dispatch(deleteTodoThunk);\n  };\n\n  const colorOptions = availableColors.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: c,\n    children: capitalize(c)\n  }, c, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          checked: completed,\n          onChange: handleCompletedChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-text\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"colorPicker\",\n          value: color,\n          style: {\n            color\n          },\n          onChange: handleColorChanged,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), colorOptions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"destroy\",\n          onClick: () => handleDelete(),\n          children: /*#__PURE__*/_jsxDEV(TimesSolid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoListItem, \"sYuTICH3ezxhLVQORlD7K4+KScQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TodoListItem;\nexport default TodoListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListItem\");","map":{"version":3,"sources":["/home/muna/code/Muna-Lombe/tutorials/React/react-redux-todo-app-with-reduxtoolkit/src/features/todos/TodoListItem.js"],"names":["React","ReactComponent","TimesSolid","availableColors","capitalize","useDispatch","useSelector","selectTodoById","FILTER__COLOR_FILTER_CHANGED","TODOS__COLOR_SELECTED","TODOS__TODO_DELETED","TODOS__TODO_TOGGLED","deleteTodo","todosColorSelected","todosDeleted","todosToggledCompleted","TodoListItem","id","onColorChange","onCompletedChange","onDelete","todo","state","text","completed","color","dispatch","handleCompletedChanged","e","handleColorChanged","target","value","handleDelete","deleteTodoThunk","colorOptions","map","c"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { ReactComponent as TimesSolid } from './times-solid.svg'\n\nimport { availableColors, capitalize } from '../filters/colors'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectTodoById } from './todosSlice'\nimport { FILTER__COLOR_FILTER_CHANGED, TODOS__COLOR_SELECTED, TODOS__TODO_DELETED, TODOS__TODO_TOGGLED } from '../../actionTypes'\nimport { deleteTodo, todosColorSelected, todosDeleted, todosToggledCompleted } from './actions'\n\n\n\nconst TodoListItem = ({ id, onColorChange, onCompletedChange, onDelete }) => {\n    const todo = useSelector(state => selectTodoById(state, id))\n    \n    const { text, completed, color } = todo\n    \n\n    const dispatch = useDispatch()\n\n    const handleCompletedChanged = (e) => {\n        dispatch(todosToggledCompleted(todo.id))\n    }\n\n    const handleColorChanged = (e) => {\n        const color = e.target.value\n        dispatch(todosColorSelected(color, todo.id))\n    }\n    const handleDelete = () => {\n        const deleteTodoThunk = deleteTodo(todo.id)\n        dispatch(deleteTodoThunk)\n    }\n    const colorOptions = availableColors.map((c) => (\n        <option key={c} value={c}>\n        {capitalize(c)}\n        </option>\n    ))\n\n    return (\n        <li>\n        <div className=\"view\">\n            <div className=\"segment label\">\n            <input\n                className=\"toggle\"\n                type=\"checkbox\"\n                checked={completed}\n                onChange={handleCompletedChanged}\n            />\n            <div className=\"todo-text\">{text}</div>\n            </div>\n            <div className=\"segment buttons\">\n            <select\n                className=\"colorPicker\"\n                value={color}\n                style={{ color }}\n                onChange={handleColorChanged}\n            >\n                <option value=\"\"></option>\n                {colorOptions}\n            </select>\n            <button className=\"destroy\" onClick={()=>handleDelete()}>\n                <TimesSolid />\n            </button>\n            </div>\n        </div>\n        </li>\n    )\n}\n\nexport default TodoListItem"]},"metadata":{},"sourceType":"module"}