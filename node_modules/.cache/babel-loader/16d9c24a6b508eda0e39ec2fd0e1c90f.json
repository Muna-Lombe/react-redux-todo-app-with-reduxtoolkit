{"ast":null,"code":"var _jsxFileName = \"/home/muna/code/Muna-Lombe/tutorials/React/react-redux-todo-app-with-reduxtoolkit/src/features/footer/Footer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TODOS__ALL_COMPLETED, TODOS__COMPLETED_CLEARED } from '../../actionTypes';\nimport { colorFilterChanged, statusFilterChanged } from '../filters/actions';\nimport { availableColors, capitalize } from '../filters/colors';\nimport { StatusFilters } from '../filters/filtersSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RemainingTodos = _ref => {\n  let {\n    count\n  } = _ref;\n  const suffix = count === 1 ? '' : 's';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-count\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Remaining Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), \" item\", suffix, \" left\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = RemainingTodos;\n\nconst StatusFilter = _ref2 => {\n  let {\n    value: status,\n    onChange\n  } = _ref2;\n  const renderedFilters = Object.keys(StatusFilters).map(key => {\n    const value = StatusFilters[key];\n\n    const handleClick = () => onChange(value);\n\n    const className = value === status ? 'selected' : '';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: className,\n        onClick: handleClick,\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters statusFilters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Filter by Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderedFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}; // colorFilterChangedor\n\n\n_c2 = StatusFilter;\n\nconst ColorFilters = _ref3 => {\n  let {\n    value: colors,\n    onChange\n  } = _ref3;\n  const renderedColors = availableColors.map(color => {\n    const checked = colors.includes(color);\n\n    const handleChange = () => {\n      const changeType = checked ? 'removed' : 'added';\n      onChange(color, changeType);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: color,\n        checked: checked,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"color-block\",\n        style: {\n          backgroundColor: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), capitalize(color)]\n    }, color, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters colorFilters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Filter by Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"colorSelection\",\n      children: renderedColors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = ColorFilters;\n\nconst Footer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    status,\n    colors\n  } = useSelector(state => state.filters);\n  const todosRemaining = useSelector(state => {\n    const newEntities = state.todos.entities;\n    const uncompletedTodos = Object.keys(newEntities).filter(value => !value.completed);\n    console.log(\"uncomp\", uncompletedTodos);\n    const length = uncompletedTodos.length;\n    return length;\n  });\n\n  const onColorChange = (color, changeType) => {\n    // console.log('Color change: ', { color, changeType })\n    dispatch(colorFilterChanged(color, changeType));\n  };\n\n  const onStatusChange = status => {\n    dispatch(statusFilterChanged(status)); // console.log('Status change: ', status)\n  };\n\n  const handleClearAll = () => {\n    dispatch({\n      type: TODOS__COMPLETED_CLEARED\n    });\n  };\n\n  const handleMarkAll = () => {\n    dispatch({\n      type: TODOS__ALL_COMPLETED\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => handleMarkAll(),\n        children: \"Mark All Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => handleClearAll(),\n        children: \"Clear Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RemainingTodos, {\n      count: todosRemaining\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatusFilter, {\n      value: status,\n      onChange: onStatusChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColorFilters, {\n      value: colors,\n      onChange: onColorChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Footer, \"gccgwIOz16U+DfpwKWHh84aaQXE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c4 = Footer;\nexport default Footer;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"RemainingTodos\");\n$RefreshReg$(_c2, \"StatusFilter\");\n$RefreshReg$(_c3, \"ColorFilters\");\n$RefreshReg$(_c4, \"Footer\");","map":{"version":3,"sources":["/home/muna/code/Muna-Lombe/tutorials/React/react-redux-todo-app-with-reduxtoolkit/src/features/footer/Footer.js"],"names":["React","useDispatch","useSelector","TODOS__ALL_COMPLETED","TODOS__COMPLETED_CLEARED","colorFilterChanged","statusFilterChanged","availableColors","capitalize","StatusFilters","RemainingTodos","count","suffix","StatusFilter","value","status","onChange","renderedFilters","Object","keys","map","key","handleClick","className","ColorFilters","colors","renderedColors","color","checked","includes","handleChange","changeType","backgroundColor","Footer","dispatch","state","filters","todosRemaining","newEntities","todos","entities","uncompletedTodos","filter","completed","console","log","length","onColorChange","onStatusChange","handleClearAll","type","handleMarkAll"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TODOS__ALL_COMPLETED, TODOS__COMPLETED_CLEARED } from '../../actionTypes'\nimport { colorFilterChanged, statusFilterChanged } from '../filters/actions'\n\nimport { availableColors, capitalize } from '../filters/colors'\nimport { StatusFilters } from '../filters/filtersSlice'\n\n\nconst RemainingTodos = ({ count }) => {\n  const suffix = count === 1 ? '' : 's'\n\n  return (\n    <div className=\"todo-count\">\n      <h5>Remaining Todos</h5>\n      <strong>{count}</strong> item{suffix} left\n    </div>\n  )\n}\n\nconst StatusFilter = ({ value: status, onChange }) => {\n  const renderedFilters = Object.keys(StatusFilters).map((key) => {\n    const value = StatusFilters[key]\n    const handleClick = () => onChange(value)\n    const className = value === status ? 'selected' : ''\n\n    return (\n      <li key={value}>\n        <button className={className} onClick={handleClick}>\n          {key}\n        </button>\n      </li>\n    )\n  })\n\n  return (\n    <div className=\"filters statusFilters\">\n      <h5>Filter by Status</h5>\n      <ul>{renderedFilters}</ul>\n    </div>\n  )\n}\n// colorFilterChangedor\nconst ColorFilters = ({ value: colors, onChange }) => {\n  const renderedColors = availableColors.map((color) => {\n    const checked = colors.includes(color)\n    const handleChange = () => {\n      const changeType = checked ? 'removed' : 'added'\n      onChange(color, changeType)\n    }\n\n    return (\n      <label key={color}>\n        <input\n          type=\"checkbox\"\n          name={color}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span\n          className=\"color-block\"\n          style={{\n            backgroundColor: color,\n          }}\n        ></span>\n        {capitalize(color)}\n      </label>\n    )\n  })\n\n  return (\n    <div className=\"filters colorFilters\">\n      <h5>Filter by Color</h5>\n      <form className=\"colorSelection\">{renderedColors}</form>\n    </div>\n  )\n}\n\nconst Footer = () => {\n  const dispatch = useDispatch()\n\n  const { status, colors } = useSelector(( state ) => state.filters)\n  const todosRemaining = useSelector((state) => {\n      const newEntities = state.todos.entities\n\n      const uncompletedTodos = Object.keys(newEntities).filter(( value ) => !value.completed )\n      console.log(\"uncomp\", uncompletedTodos)\n      const length = uncompletedTodos.length\n      return length\n  })\n\n  const onColorChange = (color, changeType) => {\n    // console.log('Color change: ', { color, changeType })\n\n    dispatch(colorFilterChanged( color, changeType))\n  }\n    \n  const onStatusChange = (status) =>{\n    \n    dispatch(statusFilterChanged(status))\n    // console.log('Status change: ', status)\n  }\n\n  const handleClearAll = () => {\n    dispatch({\n      type: TODOS__COMPLETED_CLEARED\n    })\n  }\n  const handleMarkAll = () => {\n    dispatch({\n      type: TODOS__ALL_COMPLETED\n    })\n    \n  }\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"actions\">\n        <h5>Actions</h5>\n        <button className=\"button\" onClick={() => handleMarkAll()}>Mark All Completed</button>\n        <button className=\"button\" onClick={() => handleClearAll()}>Clear Completed</button>\n      </div>\n\n      <RemainingTodos count={todosRemaining} />\n      <StatusFilter value={status} onChange={onStatusChange} />\n      <ColorFilters value={colors} onChange={onColorChange} />\n    </footer>\n  )\n}\n\nexport default Footer\n"]},"metadata":{},"sourceType":"module"}