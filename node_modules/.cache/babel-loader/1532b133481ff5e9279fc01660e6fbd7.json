{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { fetcherMiddleware } from \"./addons/middleware/fetcherMiddleware\";\nimport { loggerMiddleware } from \"./addons/middleware/loggerMiddleware\";\nimport rootReducer from \"./reducer\"; // add a preloaded state from server\n// or from localStorage\n\nlet preloadedState;\nconst persistedTodosString = localStorage.getItem('todos');\n\nif (persistedTodosString) {\n  preloadedState = {\n    todos: JSON.parse(persistedTodosString)\n  };\n}\n\nconst composedEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewareEnhancer = applyMiddleware(loggerMiddleware, thunk);\nconst store = createStore(rootReducer, composedEnhancers(middlewareEnhancer));\nexport default store;","map":{"version":3,"sources":["/home/muna/code/Muna-Lombe/tutorials/React/react-redux-todo-app-with-reduxtoolkit/src/store.js"],"names":["createStore","applyMiddleware","compose","thunk","fetcherMiddleware","loggerMiddleware","rootReducer","preloadedState","persistedTodosString","localStorage","getItem","todos","JSON","parse","composedEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middlewareEnhancer","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AACA,SAASC,gBAAT,QAAiC,sCAAjC;AACA,OAAOC,WAAP,MAAwB,WAAxB,C,CAEA;AACA;;AAEA,IAAIC,cAAJ;AACA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA7B;;AAEA,IAAIF,oBAAJ,EAA0B;AACtBD,EAAAA,cAAc,GAAG;AACbI,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWL,oBAAX;AADM,GAAjB;AAGH;;AAID,MAAMM,iBAAiB,GAAGC,MAAM,CAACC,oCAAP,IAA+Cd,OAAzE;AACA,MAAMe,kBAAkB,GAAGhB,eAAe,CAACI,gBAAD,EAAmBF,KAAnB,CAA1C;AACA,MAAMe,KAAK,GAAGlB,WAAW,CAACM,WAAD,EAAcQ,iBAAiB,CAACG,kBAAD,CAA/B,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { fetcherMiddleware } from \"./addons/middleware/fetcherMiddleware\";\nimport { loggerMiddleware } from \"./addons/middleware/loggerMiddleware\";\nimport rootReducer from \"./reducer\";\n\n// add a preloaded state from server\n// or from localStorage\n\nlet preloadedState;\nconst persistedTodosString = localStorage.getItem('todos')\n\nif( persistedTodosString) {\n    preloadedState = {\n        todos: JSON.parse(persistedTodosString)\n    }\n}\n\n\n\nconst composedEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewareEnhancer = applyMiddleware(loggerMiddleware, thunk)\nconst store = createStore(rootReducer, composedEnhancers(middlewareEnhancer))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}