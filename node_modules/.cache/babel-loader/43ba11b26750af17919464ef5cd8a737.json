{"ast":null,"code":"var _jsxFileName = \"/home/muna/code/Muna-Lombe/tutorials/React/react-redux-todo-app-with-reduxtoolkit/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { fetchTodos } from './features/todos/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nstore.dispatch(fetchTodos());\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals(); //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// import store from './store'\n// // log initial state\n// console.log('Initial state: ', store.getState())\n// const unsubcribe = store.subscribe(() => \n//     console.log('state after dispatch: ', store.getState())\n// )\n// store.dispatch({ type: 'todos/todoAdded', payload: 'learn abour actions'})\n// store.dispatch({ type: 'todos/todoAdded', payload: 'try reducers'})\n// // store.dispatch({ type: 'todos/todAdded', payload: 'about stores'})\n// store.dispatch({ type: 'todos/todoToggled', payload: 0})\n// store.dispatch({ type: 'todos/todoToggled', payload: 1})\n// store.dispatch({ type: 'filters/statusFilterChanged', payload: 'Active'})\n// store.dispatch({\n//     type: 'filters/colorFilterChanged',\n//     payload: {\n//         color: 'red',\n//         changeType: 'added'\n//     }\n// })\n// store.dispatch({ type: 'todos/colorSelected', payload: {id:1, color:'red'}})\n// // stop listening for updates to state\n// unsubcribe()\n// store.dispatch({ type: 'todos/todoAdded', payload: 'Try creating a store' })","map":{"version":3,"sources":["/home/muna/code/Muna-Lombe/tutorials/React/react-redux-todo-app-with-reduxtoolkit/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","Provider","store","fetchTodos","dispatch","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEAD,KAAK,CAACE,QAAN,CAAeD,UAAU,EAAzB;AAEAL,QAAQ,CAACO,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA,2BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAP,eAAe,G,CACf;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { fetchTodos } from './features/todos/actions'\n\nstore.dispatch(fetchTodos())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// import store from './store'\n\n// // log initial state\n// console.log('Initial state: ', store.getState())\n\n// const unsubcribe = store.subscribe(() => \n//     console.log('state after dispatch: ', store.getState())\n// )\n\n// store.dispatch({ type: 'todos/todoAdded', payload: 'learn abour actions'})\n// store.dispatch({ type: 'todos/todoAdded', payload: 'try reducers'})\n// // store.dispatch({ type: 'todos/todAdded', payload: 'about stores'})\n\n// store.dispatch({ type: 'todos/todoToggled', payload: 0})\n// store.dispatch({ type: 'todos/todoToggled', payload: 1})\n\n// store.dispatch({ type: 'filters/statusFilterChanged', payload: 'Active'})\n\n// store.dispatch({\n//     type: 'filters/colorFilterChanged',\n//     payload: {\n//         color: 'red',\n//         changeType: 'added'\n//     }\n// })\n// store.dispatch({ type: 'todos/colorSelected', payload: {id:1, color:'red'}})\n\n// // stop listening for updates to state\n// unsubcribe()\n\n// store.dispatch({ type: 'todos/todoAdded', payload: 'Try creating a store' })"]},"metadata":{},"sourceType":"module"}